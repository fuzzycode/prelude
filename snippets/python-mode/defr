# -*- mode: snippet -*-
# name: def with reST documentation
# key: def
# expand-env: ((self (lambda () (let ((info (python-info-current-defun))) (if info "self, " "")))))
#contributor: Bj√∂rn Larsson (develop@bjornlarsson.net)
# --
def ${1:name}(`(funcall self)`$2):
    """
    ${2:$
    (let* ((indent
            (concat "\n" (make-string (current-column) 32)))
           (args
            (mapconcat
             '(lambda (x)
                (if (not (string= (nth 0 x) ""))
                    (concat ":param " (nth 0 x) ":")))
             (mapcar
              '(lambda (x)
                 (mapcar
                  '(lambda (x)
                     (replace-regexp-in-string "[[:blank:]]*$" ""
                      (replace-regexp-in-string "^[[:blank:]]*" "" x)))
                  x))
              (mapcar '(lambda (x) (split-string x "="))
                      (split-string yas-text ",")))
             indent)))
      (if (not (string= args ""))
        (mapconcat
         'identity
         (list "" args)
         indent)))
    }

    :return: ${3:None}
    :raise: ${4:Nothing}

    $5
    """

    $0